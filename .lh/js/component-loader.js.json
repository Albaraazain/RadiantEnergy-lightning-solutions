{
    "sourceFile": "js/component-loader.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1729272337939,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1729273673587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,15 @@\n // component-loader.js\r\n \r\n-const criticalComponents = [\r\n-  { id: \"navigation-content\", file: \"js/components/navigation.js\" },\r\n-  { id: \"splash-content\", file: \"js/components/splash.js\" },\r\n+const components = [\r\n+  { id: \"navigation-content\", file: \"js/components/navigation.js\", critical: true },\r\n+  { id: \"splash-content\", file: \"js/components/splash.js\", critical: true },\r\n+  { id: \"video-content\", file: \"js/components/video.js\", critical: false },\r\n+  { id: \"ball-content\", file: \"js/components/ball.js\", critical: false },\r\n+  { id: \"diablo-content\", file: \"js/components/diablo.js\", critical: false },\r\n+  { id: \"cta-content\", file: \"js/components/cta.js\", critical: false },\r\n ];\r\n \r\n-const nonCriticalComponents = [\r\n-  { id: \"video-content\", file: \"js/components/video.js\" },\r\n-  { id: \"ball-content\", file: \"js/components/ball.js\" },\r\n-  { id: \"diablo-content\", file: \"js/components/diablo.js\" },\r\n-  { id: \"cta-content\", file: \"js/components/cta.js\" },\r\n-];\r\n-\r\n function showLoader() {\r\n   const loader = document.createElement('div');\r\n   loader.id = 'component-loader';\r\n   loader.innerHTML = 'Loading...';\r\n@@ -59,57 +56,31 @@\n     window.initSmoothScrolling();\r\n   }\r\n }\r\n \r\n-async function loadCriticalComponents() {\r\n+async function loadComponents() {\r\n+  showLoader();\r\n+\r\n   try {\r\n-    await Promise.all(criticalComponents.map(loadComponent));\r\n+    // Load critical components first\r\n+    await Promise.all(components.filter(c => c.critical).map(loadComponent));\r\n+    \r\n+    // Initialize after critical components are loaded\r\n     initializeWebflowAndLenis();\r\n-  } catch (error) {\r\n-    console.error(\"Failed to load critical components:\", error);\r\n-  }\r\n-}\r\n \r\n-function loadNonCriticalComponents() {\r\n-  nonCriticalComponents.forEach(component => {\r\n-    requestIdleCallback(() => {\r\n-      loadComponent(component).catch(error => {\r\n-        console.error(`Failed to load non-critical component ${component.id}:`, error);\r\n-      });\r\n-    });\r\n-  });\r\n-}\r\n+    // Then load non-critical components\r\n+    await Promise.all(components.filter(c => !c.critical).map(loadComponent));\r\n \r\n-const observer = new IntersectionObserver((entries) => {\r\n-  entries.forEach(entry => {\r\n-    if (entry.isIntersecting) {\r\n-      const componentId = entry.target.id;\r\n-      const component = nonCriticalComponents.find(c => c.id === componentId);\r\n-      if (component) {\r\n-        loadComponent(component).catch(error => {\r\n-          console.error(`Failed to load component ${component.id}:`, error);\r\n-        });\r\n-        observer.unobserve(entry.target);\r\n-      }\r\n-    }\r\n-  });\r\n-});\r\n+    // Re-initialize after all components are loaded\r\n+    initializeWebflowAndLenis();\r\n \r\n-async function loadComponents() {\r\n-  showLoader();\r\n-  \r\n-  await loadCriticalComponents();\r\n-  \r\n-  hideLoader();\r\n-\r\n-  document.body.classList.add('components-loaded');\r\n-  \r\n-  nonCriticalComponents.forEach(component => {\r\n-    const element = document.getElementById(component.id);\r\n-    if (element) observer.observe(element);\r\n-  });\r\n-\r\n-  loadNonCriticalComponents();\r\n+    hideLoader();\r\n+    document.body.classList.add('components-loaded');\r\n+  } catch (error) {\r\n+    console.error(\"Failed to load components:\", error);\r\n+    hideLoader();\r\n+    // Handle the error (e.g., show an error message to the user)\r\n+  }\r\n }\r\n \r\n document.addEventListener(\"DOMContentLoaded\", loadComponents);\r\n \r\n"
                }
            ],
            "date": 1729272337939,
            "name": "Commit-0",
            "content": "// component-loader.js\r\n\r\nconst criticalComponents = [\r\n  { id: \"navigation-content\", file: \"js/components/navigation.js\" },\r\n  { id: \"splash-content\", file: \"js/components/splash.js\" },\r\n];\r\n\r\nconst nonCriticalComponents = [\r\n  { id: \"video-content\", file: \"js/components/video.js\" },\r\n  { id: \"ball-content\", file: \"js/components/ball.js\" },\r\n  { id: \"diablo-content\", file: \"js/components/diablo.js\" },\r\n  { id: \"cta-content\", file: \"js/components/cta.js\" },\r\n];\r\n\r\nfunction showLoader() {\r\n  const loader = document.createElement('div');\r\n  loader.id = 'component-loader';\r\n  loader.innerHTML = 'Loading...';\r\n  document.body.appendChild(loader);\r\n}\r\n\r\nfunction hideLoader() {\r\n  const loader = document.getElementById('component-loader');\r\n  if (loader) {\r\n    loader.remove();\r\n  }\r\n}\r\n\r\nfunction loadComponent(component) {\r\n  return new Promise((resolve, reject) => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = component.file;\r\n    script.onload = () => {\r\n      const content = window[component.id];\r\n      if (content) {\r\n        const element = document.getElementById(component.id);\r\n        if (element) {\r\n          element.innerHTML = content;\r\n          resolve(component);\r\n        } else {\r\n          reject(new Error(`Element with id ${component.id} not found`));\r\n        }\r\n      } else {\r\n        reject(new Error(`Component ${component.id} not found`));\r\n      }\r\n    };\r\n    script.onerror = () => reject(new Error(`Failed to load script for ${component.id}`));\r\n    document.body.appendChild(script);\r\n  });\r\n}\r\n\r\nfunction initializeWebflowAndLenis() {\r\n  if (window.Webflow) {\r\n    window.Webflow.destroy();\r\n    window.Webflow.ready();\r\n    window.Webflow.require(\"ix2\").init();\r\n  }\r\n  if (window.initSmoothScrolling) {\r\n    window.initSmoothScrolling();\r\n  }\r\n}\r\n\r\nasync function loadCriticalComponents() {\r\n  try {\r\n    await Promise.all(criticalComponents.map(loadComponent));\r\n    initializeWebflowAndLenis();\r\n  } catch (error) {\r\n    console.error(\"Failed to load critical components:\", error);\r\n  }\r\n}\r\n\r\nfunction loadNonCriticalComponents() {\r\n  nonCriticalComponents.forEach(component => {\r\n    requestIdleCallback(() => {\r\n      loadComponent(component).catch(error => {\r\n        console.error(`Failed to load non-critical component ${component.id}:`, error);\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\nconst observer = new IntersectionObserver((entries) => {\r\n  entries.forEach(entry => {\r\n    if (entry.isIntersecting) {\r\n      const componentId = entry.target.id;\r\n      const component = nonCriticalComponents.find(c => c.id === componentId);\r\n      if (component) {\r\n        loadComponent(component).catch(error => {\r\n          console.error(`Failed to load component ${component.id}:`, error);\r\n        });\r\n        observer.unobserve(entry.target);\r\n      }\r\n    }\r\n  });\r\n});\r\n\r\nasync function loadComponents() {\r\n  showLoader();\r\n  \r\n  await loadCriticalComponents();\r\n  \r\n  hideLoader();\r\n\r\n  document.body.classList.add('components-loaded');\r\n  \r\n  nonCriticalComponents.forEach(component => {\r\n    const element = document.getElementById(component.id);\r\n    if (element) observer.observe(element);\r\n  });\r\n\r\n  loadNonCriticalComponents();\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", loadComponents);\r\n\r\n// Expose loadComponents globally\r\nwindow.loadComponents = loadComponents;"
        }
    ]
}